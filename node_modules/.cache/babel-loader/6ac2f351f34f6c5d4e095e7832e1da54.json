{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/Documents/lessons/nba/src/pages/Players/Players.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { getPlayers, getAverages } from \"../../api/api\";\nexport default function Players() {\n  const [players, setPlayers] = useState({\n    name: \"kobe\",\n    year: \"2017\",\n    stats: {},\n    ids: \"237\"\n  }); // useEffect(() => {\n  //   getPlayers(players.name)\n  //     .then(res => {\n  //       return res.json();\n  //     })\n  //     .then(data => {\n  //       setPlayers({ ...players, ids: data.data[0].id });\n  //       console.log(data.data[0]);\n  //     })\n  //     .then(() => getAverages(players.year, players.ids))\n  //     .then(res => {\n  //       return res.json();\n  //     })\n  //     .then(data => {\n  //       setPlayers({ ...players, stats: data.data[0] });\n  //       console.log(data.data[0]);\n  //     })\n  //     .catch(error => console.error(error));\n  // }, []);\n  // console.log(players.ids);\n  // const p = fetch(\n  //   `https://www.balldontlie.io/api/v1/players?search=${players.name}`\n  // );\n  // const p1 = getAverages(players.year, players.ids);\n  // Promise.all([p, p1]).then(([res1, res2]) => {\n  //   // setPlayers({ ...players, ids: res1.data[0].id });\n  //   // setPlayers({ ...players, stats: res2.data });\n  //   console.log(res1);\n  //   console.log(res2);\n  // });\n\n  Promise.all([new Promise(res => {\n    getPlayers(players.name), console.log(res);\n  }) // new Promise((resolve, reject) => setTimeout(() => reject(new Error(\"Ошибка!\")), 2000)),\n  // new Promise((resolve, reject) => setTimeout(() => resolve(3), 3000))\n  ]).catch(alert);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/aleksandr/Documents/lessons/nba/src/pages/Players/Players.jsx"],"names":["React","useState","useEffect","getPlayers","getAverages","Players","players","setPlayers","name","year","stats","ids","Promise","all","res","console","log","catch","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AACrCO,IAAAA,IAAI,EAAE,MAD+B;AAErCC,IAAAA,IAAI,EAAE,MAF+B;AAGrCC,IAAAA,KAAK,EAAE,EAH8B;AAIrCC,IAAAA,GAAG,EAAE;AAJgC,GAAD,CAAtC,CADgC,CAQhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CACV,IAAID,OAAJ,CAAYE,GAAG,IAAI;AACjBX,IAAAA,UAAU,CAACG,OAAO,CAACE,IAAT,CAAV,EAA0BO,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAA1B;AACD,GAFD,CADU,CAIV;AACA;AALU,GAAZ,EAMGG,KANH,CAMSC,KANT;AAQA,sBACE;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPlayers, getAverages } from \"../../api/api\";\n\nexport default function Players() {\n  const [players, setPlayers] = useState({\n    name: \"kobe\",\n    year: \"2017\",\n    stats: {},\n    ids: \"237\"\n  });\n\n  // useEffect(() => {\n  //   getPlayers(players.name)\n  //     .then(res => {\n  //       return res.json();\n  //     })\n  //     .then(data => {\n  //       setPlayers({ ...players, ids: data.data[0].id });\n  //       console.log(data.data[0]);\n  //     })\n  //     .then(() => getAverages(players.year, players.ids))\n  //     .then(res => {\n  //       return res.json();\n  //     })\n  //     .then(data => {\n  //       setPlayers({ ...players, stats: data.data[0] });\n  //       console.log(data.data[0]);\n  //     })\n  //     .catch(error => console.error(error));\n  // }, []);\n  // console.log(players.ids);\n\n  // const p = fetch(\n  //   `https://www.balldontlie.io/api/v1/players?search=${players.name}`\n  // );\n  // const p1 = getAverages(players.year, players.ids);\n\n  // Promise.all([p, p1]).then(([res1, res2]) => {\n  //   // setPlayers({ ...players, ids: res1.data[0].id });\n  //   // setPlayers({ ...players, stats: res2.data });\n  //   console.log(res1);\n  //   console.log(res2);\n  // });\n\n  Promise.all([\n    new Promise(res => {\n      getPlayers(players.name), console.log(res);\n    })\n    // new Promise((resolve, reject) => setTimeout(() => reject(new Error(\"Ошибка!\")), 2000)),\n    // new Promise((resolve, reject) => setTimeout(() => resolve(3), 3000))\n  ]).catch(alert);\n\n  return (\n    <form action=\"\">\n      {/* <input \n    type=\"text\"\n    value = {players.name}\n    onChange={e => setPlayers(...players, name: e.target.name })}\n    /> */}\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}